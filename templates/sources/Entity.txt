package it.algos.@LOWERPROJECT@.entity.@PACKAGE@;

import com.vaadin.spring.annotation.SpringComponent;
import it.algos.springvaadin.entity.ACompanyEntity;
import it.algos.springvaadin.entity.ACompanyRequired;
import it.algos.springvaadin.field.AFieldType;
import it.algos.springvaadin.annotation.*;
import it.algos.springvaadin.field.FieldAccessibility;
import it.algos.springvaadin.lib.Cost;
import it.algos.springvaadin.entity.AEntity;
import it.algos.springvaadin.login.ARoleType;
import it.algos.springvaadin.list.ListButton;
import it.algos.@PROJECT@.application.AppCost;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Created by gac on @TODAY@
 * Annotated with @SpringComponent (obbligatorio)
 * Annotated with @Data (Lombok) for automatic use of Getter and Setter
 * Annotated with @NoArgsConstructor (Lombok) for JavaBean specifications
 * Annotated with @AllArgsConstructor (Lombok) per usare il costruttore completo nel Service
 * Estende la Entity astratta AEntity che contiene la key property ObjectId
 */
@SpringComponent
@Document(collection = @TAG@)
@AIEntity(roleTypeVisibility = ARoleType.user@COMPANYREQUIRED@)
@AIList(columns = {"code", "descrizione"}, dev = ListButton.standard, admin = ListButton.noSearch, user = ListButton.show)
@AIForm(fields = {"code", "descrizione", "note"})
@Data
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(callSuper = false)
public class @ENTITY@ extends @ENTITYSUPERCLASS@ {


    /**
     * versione della classe per la serializzazione
     */
    private final static long serialVersionUID = 1L;


    /**
     * codice di riferimento (obbligatorio)
     */
    @NotEmpty
    @Size(min = 2, max = 20)
    @Indexed()
    @AIField(
            type = AFieldType.text,
            required = true,
            focus = true,
            name = "Codice",
            widthEM = 9,
            admin = FieldAccessibility.allways,
            user = FieldAccessibility.showOnly)
    @AIColumn(name = "Code", width = 120)
    private String code;



    /**
     * descrizione (facoltativa)
     */
    @AIField(
            type = AFieldType.text,
            required = true,
            name = "Descrizione completa",
            widthEM = 26,
            admin = FieldAccessibility.allways,
            user = FieldAccessibility.showOnly)
    @AIColumn(name = "Descrizione", width = 500)
    private String descrizione;


    /**
     * @return a string representation of the object.
     */
    @Override
    public String toString() {
        return getCode();
    }// end of method


}// end of entity class
