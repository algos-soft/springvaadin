package it.algos.@LOWERPROJECT@.entity.@PACKAGE@;
import it.algos.springvaadin.lib.Cost;
import com.vaadin.icons.VaadinIcons;
import com.vaadin.spring.annotation.SpringComponent;
import it.algos.springvaadin.lib.Cost;
import it.algos.springvaadin.presenter.APresenter;
import it.algos.springvaadin.presenter.IAPresenter;
import it.algos.springvaadin.service.IAService;
import it.algos.springvaadin.list.IAList;
import it.algos.springvaadin.form.IAForm;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Scope;

/**
 * Created by gac on @TODAY@
 * Annotated with @SpringComponent (obbligatorio)
 * Annotated with @Qualifier, per individuare la classe specifica da iniettare come interfaccia
 */
@SpringComponent
@Qualifier(@TAG@)
@Scope("session")
@Slf4j
public class @ENTITY@Presenter extends APresenter {

    /**
     * Costruttore @Autowired (nella superclasse)
     * Si usa un @Qualifier(), per avere la sottoclasse specifica
     * Si usa una costante statica, per essere sicuri di scrivere sempre uguali i riferimenti
     * Regola il modello-dati specifico
     */
    public @ENTITY@Presenter(
                @Lazy @Qualifier(@TAG@) IAService service,
                @Lazy @Qualifier(@TAG@) IAList list,
                @Lazy @Qualifier(@TAG@) IAForm form) {
        super(service, list, form);
        super.entityClass = @ENTITY@.class;
     }// end of Spring constructor


}// end of class
