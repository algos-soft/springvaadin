<?xml version="1.0"?>
<project name="modulo" default="creaPackage">


    <property name="newEntity" value="xxx"/>
    <property name="thisProject" value="@PROJECT@"/>
    <property name="nomeBaseFramework" value="springvaadin"/>
    <property name="baseDir" value="${basedir}/.."/>


    <target name="init" description="Converte la directory">
        <property name="baseIdeaProjects" value="${baseDir}/.."/>
        <property name="baseFramework" value="${baseIdeaProjects}/${nomeBaseFramework}"/>
        <property name="baseProject" value="${basedir}/.."/>
        <lower string="${newEntity}" to="newDir"/>
        <primitrecaratteri string="${newEntity}" to="originalTag"/>
        <upper string="${originalTag}" to="tag"/>

        <property name="tagTemplates" value="templates/sources"/>
        <property name="srcTemplates" value="${baseFramework}/${tagTemplates}"/>

        <property name="pathIdea" value="src/main/java/"/>
        <property name="pathEntity" value="it/algos/${thisProject}/entity/"/>
        <property name="package" value="${newDir}"/>

        <property name="tagFindEndFile" value="&#10;}// end of static class"/>
        <property name="tagAddCost" value="&#10;&#009;public final static String TAG_${tag} = "/>
        <property name="tagFindMenu" value="addVisteSpecifiche() {&#10;"/>
        <property name="tagAddMenu" value="menuLayout.addView(${newEntity}NavView.class);"/>
        <property name="tagPackMenu" value="package it.algos.${project}.ui;&#10;&#10;"/>
        <property name="tagImportMenu" value="import it.algos.${project}.entity.${newDir}.${newEntity}NavView;&#10;"/>

        <property name="tagXml" value=".xml"/>
        <property name="tagTxt" value=".txt"/>
        <property name="tagJava" value=".java"/>
        <property name="tagUI" value="UI"/>
        <property name="tagEntity" value="Entity"/>
        <property name="tagPresenter" value="Presenter"/>
        <property name="tagNavView" value="NavView"/>
        <property name="tagView" value="View"/>
        <property name="tagList" value="List"/>
        <property name="tagForm" value="Form"/>
        <property name="tagService" value="Service"/>
        <property name="tagRepository" value="JDBCRepository"/>

        <property name="newPathDir" value="${baseProject}/${pathIdea}${pathEntity}${newDir}"/>

        <property name="srcEntity" value="${srcTemplates}/${tagEntity}${tagTxt}"/>
        <property name="srcPresenter" value="${srcTemplates}/${tagPresenter}${tagTxt}"/>
        <property name="srcNavView" value="${srcTemplates}/${tagNavView}${tagTxt}"/>
        <property name="srcView" value="${srcTemplates}/${tagView}${tagTxt}"/>
        <property name="srcList" value="${srcTemplates}/${tagList}${tagTxt}"/>
        <property name="srcForm" value="${srcTemplates}/${tagForm}${tagTxt}"/>
        <property name="srcService" value="${srcTemplates}/${tagService}${tagTxt}"/>
        <property name="srcRepository" value="${srcTemplates}/${tagRepository}${tagTxt}"/>

        <property name="destEntity" value="${newPathDir}/${newEntity}${tagJava}"/>
        <property name="destPresenter" value="${newPathDir}/${newEntity}${tagPresenter}${tagJava}"/>
        <property name="destNavView" value="${newPathDir}/${newEntity}NavView.java"/>
        <property name="destView" value="${newPathDir}/${newEntity}View.java"/>
        <property name="destList" value="${newPathDir}/${newEntity}List.java"/>
        <property name="destForm" value="${newPathDir}/${newEntity}Form.java"/>
        <property name="destService" value="${newPathDir}/${newEntity}Service.java"/>
        <property name="destRepository" value="${newPathDir}/${newEntity}JDBCRepository.java"/>

        <property name="destCost" value="${baseProject}/${pathIdea}/${pathLib}Cost.java"/>
        <property name="destUI" value="${baseProject}/${pathIdea}/${pathUI}SpringVaadinUI.java"/>
    </target>


    <target name="test" depends="init" description="Controllo della variabili">
        <echo message="newEntity = ${newEntity}"/>
        <echo message="thisProject = ${thisProject}"/>
        <echo message="nomeBaseFramework = ${nomeBaseFramework}"/>
        <echo message="baseDir = ${baseDir}"/>
        <echo message="baseIdeaProjects = ${baseIdeaProjects}"/>
        <echo message="baseFramework = ${baseFramework}"/>
        <echo message="baseProject = ${baseProject}"/>
        <echo message="newDir = ${newDir}"/>
        <echo message="tag = ${tag}"/>
        <echo message="tagTemplates = ${tagTemplates}"/>
        <echo message="srcTemplates = ${srcTemplates}"/>
        <echo message="newPathDir = ${newPathDir}"/>
        <echo message="srcEntity = ${srcEntity}"/>
        <echo message="destEntity = ${destEntity}"/>
        <echo message="destPresenter = ${destPresenter}"/>
    </target>


    <target name="creaPackageDirectory" description="Crea la nuova cartella/directory">
        <mkdir dir="${newPathDir}"/>
    </target>


    <target name="creaSingoloFile" description="Copia il singolo file passato come parametro">
        <copy file="${sourceFile}" tofile="${destFile}" overwrite="true">
            <filterset>
                <filter token="PROJECT" value="${thisProject}"/>
                <filter token="PACKAGE" value="${package}"/>
                <filter token="TAG" value="${tag}"/>
                <filter token="ENTITY" value="${newEntity}"/>
            </filterset>
        </copy>
        <echo message="Copiato ${sourceFile} in ${destFile}"/>
    </target>


    <target name="creaFiles" description="Crea tutti ifiles">
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcEntity}"/>
            <param name="destFile" value="${destEntity}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcPresenter}"/>
            <param name="destFile" value="${destPresenter}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcNavView}"/>
            <param name="destFile" value="${destNavView}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcView}"/>
            <param name="destFile" value="${destView}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcList}"/>
            <param name="destFile" value="${destList}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcForm}"/>
            <param name="destFile" value="${destForm}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcService}"/>
            <param name="destFile" value="${destService}"/>
        </antcall>
        <antcall target="creaSingoloFile">
            <param name="sourceFile" value="${srcRepository}"/>
            <param name="destFile" value="${destRepository}"/>
        </antcall>
    </target>


    <target name="checkCostante" depends="init"
            description="Controlla che la costante non esista già (per evitare duplicazioni)">

        <loadfile property="fileCost" srcfile="${destCost}"/>
        <condition property="hasNoCost">
            <not>
                <matches pattern="${tagAddCost}" string="${fileCost}"/>
            </not>
        </condition>
        <antcall target="addCostante">
        </antcall>
    </target>


    <target name="addCostante" if="${hasNoCost}">
        <replace file="${destCost}" token="${tagFindEndFile}"
                 value="${tagAddCost}&quot;${newDir}&quot;;${tagFindEndFile}">
        </replace>
        <echo message="Aggiunta la costante TAG_${tag} nel file lib.Cost"/>
    </target>


    <target name="checkImportMenu" depends="init"
            description="Controlla che l'import della classe non esista già (per evitare duplicazioni)">

        <loadfile property="fileImport" srcfile="${destUI}"/>
        <condition property="hasNoImportMenu">
            <not>
                <matches pattern="${tagImportMenu}" string="${fileImport}"/>
            </not>
        </condition>
        <antcall target="importMenu">
        </antcall>
    </target>


    <target name="importMenu" if="${hasNoImportMenu}">
        <replace file="${destUI}" token="${tagPackMenu}"
                 value="${tagPackMenu}${tagImportMenu}">
        </replace>
        <echo message="Aggiunta l'import della classe ${newEntity}NavView nel file ui.SpringVaadinUI"/>
    </target>


    <target name="checkAddMenu" depends="init"
            description="Controlla che la creazione del menu non esista già (per evitare duplicazioni)">

        <loadfile property="fileMenu" srcfile="${destUI}"/>
        <condition property="hasNoAddMenu">
            <not>
                <matches pattern="${newEntity}NavView.class" string="${fileMenu}"/>
            </not>
        </condition>
        <echo>${fileMenu}</echo>
        <echo message="tagAddMenu: ${tagAddMenu}"/>
        <antcall target="addMenu">
        </antcall>
    </target>


    <target name="addMenu" if="${hasNoAddMenu}">
        <replace file="${destUI}" token="${tagFindMenu}"
                 value="${tagFindMenu}&#009;&#009;${tagAddMenu}&#10;">
        </replace>
        <echo message="Aggiunta creazione del menu ${newEntity}NavView nel file ui.SpringVaadinUI"/>
    </target>


    <target name="creaPackage" depends="init,creaPackageDirectory,creaFiles,checkCostante,checkImportMenu,checkAddMenu"
            description="Crea un nuovo package (modulo)">
    </target>


    <!-- Using Javascript functions to convert the string -->
    <!-- To lower case -->
    <scriptdef language="javascript" name="lower">
        <attribute name="string"/>
        <attribute name="to"/>
        project.setProperty(attributes.get("to"),attributes.get("string").toLowerCase());
    </scriptdef>

    <!-- Using Javascript functions to convert the string -->
    <!-- To upper case -->
    <scriptdef language="javascript" name="upper">
        <attribute name="string"/>
        <attribute name="to"/>
        project.setProperty(attributes.get("to"),attributes.get("string").toUpperCase());
    </scriptdef>

    <!-- Using Javascript functions to convert the string -->
    <!-- Primi tre caratteri della stringa -->
    <scriptdef language="javascript" name="primitrecaratteri">
        <attribute name="string"/>
        <attribute name="to"/>
        project.setProperty(attributes.get("to"),attributes.get("string").substring(0,3));
    </scriptdef>


</project>